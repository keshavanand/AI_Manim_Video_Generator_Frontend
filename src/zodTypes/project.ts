import { z } from 'zod';

/**
 * Schema for creating a new project.
 * All fields are required and must be non-empty strings.
 */
export const ProjectSchema = z.strictObject({
    id: z.string(),             // Optional for creation, will be generated by the serve
    title: z.string().nonempty(),        
    description: z.string().nonempty(),  
    created_at: z.string().datetime(),
    updated_at: z.string().datetime(),        
});

/**
 * Schema for representing a project in a list.
 * 'id' is required, along with non-empty title and description.
 */
export const ProjectsSchema = z.strictObject({
    id: z.string(),                      
    title: z.string().nonempty(),      
    description: z.string().nonempty(),
    created_at: z.string().datetime(),
    updated_at: z.string().datetime(),  
});

/**
 * Schema for updating a project.
 * Both fields are optional, but if provided, must be strings.
 */
export const UpdateProjectSchema = z.strictObject({
    title: z.string().optional(),        
    description: z.string().optional(),  
});

export const CreateProjectSchema = z.strictObject({
    id: z.string().optional(),
    prompt: z.string()
})
// Type definitions inferred from schemas
export type Project = z.infer<typeof ProjectSchema>;
export type Projects = z.infer<typeof ProjectsSchema>;
export type UpdateProject = z.infer<typeof UpdateProjectSchema>;
export type CreateProject = z.infer<typeof CreateProjectSchema>;